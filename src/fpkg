#!/bin/bash
_PKGDIR="$FPKG_ROOT/var/pkg"
_GITDIR="$FPKG_ROOT/var/fpkg/git"
conf="$FPKG_ROOT/var/fpkg/conf"
# unsupported; use $conf instead.
#REPO="https://github.com/Ohio2/frepo.git"
_usesha=yes
_lock="/tmp/lock"
_mlock=no

. $conf

if [ -f $_lock && $_mlock = yes ]; then
	echo "Error 5"
	exit 5
fi
touch $_lock
if [ ! -d $_GITDIR ]; then
	git clone $REPO $_GITDIR
fi
cd $_GITDIR
git pull
cd $OLDPWD
if [ ! -d $_PKGDIR ]; then
	mkdir -pv $_PKGDIR
fi

case $1 in
	sha) while [ ! -z "$2" ]; do [ $_usesha = yes | $_usesha = true ]; mlock=$_mlock PKGDIR=$_PKGDIR shapkg "$2"; shift; done ;;
	i|install) while [ ! -z "$2" ]; do mlock=$_mlock PKGDIR=$_PKGDIR GITDIR=$_GITDIR spkg "$2" ; PKGDIR=$_PKGDIR ipkg "$2" || PKGDIR=$_PKGDIR espkg "$2" ; PKGDIR=$_PKGDIR GITDIR=$_GITDIR spkg < $2.d ; PKGDIR=$_PKGDIR ipkg < $2.d ; shift; done ;;
	u|update) while [ ! -z "$2" ]; do mlock=$_mlock PKGDIR=$_PKGDIR GITDIR=$_GITDIR upkg "$2"; shift; done ;;
	l|list) while [ ! -z "$2" ]; do mlock=$_mlock PKGDIR=$_PKGDIR lpkg "$2"; shift; done ;;
	q|query) while [ ! -z "$2" ]; do mlock=$_mlock PKGDIR=$_PKGDIR qpkg "$2"; shift; done ;;
	r|remove) while [ ! -z "$2" ]; do mlock=$_mlock PKGDIR=$_PKGDIR rpkg "$2"; shift; done ;;
	s|sync) while [ ! -z "$2" ]; do mlock=$_mlock  PKGDIR=$_PKGDIR GITDIR=$_GITDIR spkg "$2"; shift; done ;;
	c|create|src|compile|make|source) mlock=$_mlock PKGDIR=$_PKGDIR cpkg "$2" "$3" "$4" ;;
	sq|syncquery) while [ ! -z "$2" ]; do mlock=$_mlock PKGDIR=$_PKGDIR GITDIR=$_GITDIR spkg --query "$2" ; shift ; done ;;
	h|help) echo -e "i|install) install package\nu|update) update package\nl|list) list package\nq|query) query package\ns|sync) copy over package file into pkgdir from the git repo (gitdir)\nc|create) make a package\nsq|syncquery) sync + query\n\n\n ERRORS:\n\n2 - probably something wrong with the scripts\n\n4 - SHA mismatch\n\n5 - if $_mlock=no then lock file exists";;
	*) echo "Invalid option." ;;
esac
rm $_lock
